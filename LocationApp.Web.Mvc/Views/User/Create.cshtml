@model LocationApp.Data.Dto.UserDto
@{
    ViewData["Title"] = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles{
    @Html.Partial("/Views/Shared/Partials/DataTable/_Css.cshtml")
}
<div class="right_col" role="main">
    <div class="">
        <div class="page-title">
            <div class="title_left">
                <h3>Kullanıcı Ekleme</h3>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_content">
                        <p>Kullanıcı oluşturmak için adım adım bilgileri dolurarak tamamlayabilirsiniz.</p>
                        <span class="section">Kullanıcı Bilgileri</span>
                        <div class="success">
                            @Html.Raw(ViewBag.Message)
                        </div>
                        @using (Html.BeginForm("Create", "User", FormMethod.Post, new { @class = "form-horizontal form-label-left", @id = "form" }))
                        {
                            <label class="control-label col-md-3 col-sm-3 col-xs-12">
                                Ünvan <span class="required">*</span>
                            </label>
                            <div class="form-group">
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.DropDownListFor(model => model.UserTitleID, new SelectList(ViewBag.UserTitle, "UserTitleID", "TitleName", 0), new { @class = "form-control", @onchange = "dropValidation();" })
                                </div>
                                <button type="button" class="btn btn-success" data-toggle="modal" data-target="#modal1"><i class="fa fa-plus"></i></button>
                            </div>
                            <label class="control-label col-md-3 col-sm-3 col-xs-12">
                                Departman: <span class="required">*</span>
                            </label>
                            <div class="form-group">
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.DropDownListFor(model => model.UserDepartmentID, new SelectList(ViewBag.Departments, "DepartmentID", "Name", 0), new { @class = "form-control", @onchange = "dropValidation();" })
                                </div>
                                <button type="button" class="btn btn-success" data-toggle="modal" data-target="#modal2"><i class="fa fa-plus"></i></button>
                            </div>
                            <label class="control-label col-md-3 col-sm-3 col-xs-12">
                                Rol: <span class="required">*</span>
                            </label>
                            <div class="item form-group">
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.DropDownListFor(model => model.UserRoleID, new SelectList(ViewBag.Roles, "UserRoleID", "UserRoleName", 0), new { @class = "form-control", @onchange = "dropValidation();" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                                    Cinsiyet <span class="required">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.DropDownListFor(model => model.Gender, new SelectList(Enum.GetValues(typeof(LocationApp.Core.Enum.Enums.Gender)), 0), "Lütfen seçiniz", new { @class = "form-control col-md-7 col-xs-12", @required = "required", @onchange = "dropValidation();" })
                                </div>
                                <header></header>
                            </div>
                            <div class="item form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                                    TC NO <span class="required">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model.NationID, new { @class = "form-control col-md-7 col-xs-12", @onkeypress = "return isNumberKey(event)", @minlength = "11", @maxlength = "11", @required = "required", @placeholder = "Kimlik Numarası Giriniz.." })
                                </div>
                            </div>
                            <div class="item form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                                    Ad <span class="required">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control col-md-7 col-xs-12", @onkeypress = "return isNumericKey(event)", @required = "required", @placeholder = "İsim Giriniz.." })
                                </div>
                            </div>
                            <div class=" item form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                                    Soyad <span class="required">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model.SurName, new { @class = "form-control col-md-7 col-xs-12", @onkeypress = "return isNumericKey(event)", @required = "required", @placeholder = "Soyisim Giriniz.." })
                                </div>
                            </div>
                            <div class="item form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                                    E-Mail <span class="required">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control col-md-7 col-xs-12", @type = "email", @required = "required", @placeholder = "mail@mail.com" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                                    Parola <span>*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model.Password, new { @class = "form-control col-md-7 col-xs-12", @type = "password", @placeholder = "Parola en az 8 karakterde olmalı ve bir rakam içermelidir." , @minlength = "8", @maxlenght="16" ,@pattern= @"^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\s).*$" })
                                </div>
                            </div>
                            <div class="ln_solid"></div>
                            <div class="form-group">
                                <div class="col-md-6 col-md-offset-3">
                                    <a href="/User/List" type="button" class="btn btn-primary pull-right">Listeye Dön</a>
                                    <button type="submit" class="btn btn-success pull-right" name="save">Kaydet</button>
                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--Ünvan modal-->
<div class="modal fade bs-example-modal-sm" id="modal1" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title" id="myModalLabel2">Yeni Ünvan</h4>
            </div>
            <div class="modal-body">
                <div class="item form-group">
                    <label for="inputsm">Ünvan Adı:</label>
                    @Html.TextBox("TitleName", "", new { @class = "form-control input-sm", @required = "required", @id = "titleModal", @onchange = "modalVal()" })
                </div>
                <div id="Messagetitle"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Vazgeç</button>
                <button type="button" class="btn btn-primary" onclick="AddTitle()">Ekle</button>
            </div>
            <script>
                var validator = new FormValidator();
                document.forms[0].onsubmit = function (e) {
                    var validatorResult = validator.checkAll(this);
                    return !!validatorResult.valid;
                };
            </script>
        </div>
    </div>
</div>
<!--Ünvan modal-->
<!--Departman modal-->
<div class="modal fade bs-example-modal-sm" id="modal2" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title" id="myModalLabel2">Yeni Departman :</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="inputsm">Ana Birim</label>
                    @Html.DropDownList("MainUnitID", new SelectList(ViewBag.MainUnits, "MainUnitID", "Name", 0), new { @class = "form-control input-sm" })
                </div>
                <div class="item form-group">
                    <label for="inputsm">Alt Birim</label>
                    @Html.DropDownList("SubUnitID", new SelectList(ViewBag.SubUnits, "SubUnitID", "Name", 0), new { @class = "form-control input-sm" })
                </div>
                <div class="form-group">
                    <label for="inputsm">Departman Adı:</label>
                    @Html.TextBox("DepartmentName", "", new { @class = "form-control input-sm" })
                </div>
                <div id="Messagedep"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Vazgeç</button>
                <button type="button" class="btn btn-primary" onclick="AddDepartment()">Ekle</button>
            </div>
            <script>
                var validator = new FormValidator();
                // select your "form" element from the DOM and attach an "onsubmit" event handler to it:
                document.forms[0].onsubmit = function (e) {
                    var validatorResult = validator.checkAll(this);
                    return !!validatorResult.valid;
                };
            </script>
        </div>
    </div>
</div>
<!--Departman modal-->

@section Scripts{

    @Html.Partial("/Views/Shared/Partials/DataTable/_Js.cshtml")
    <!-- Custom Validation Scripts -->
    <script>
        $("div.success").fadeIn(100).delay(1500).fadeOut(400);

        $(document).ready(function () {
            $('.form-control').prop('selectedIndex', 0);
            $("#NationID").val('');
            $("#Name").val('');
            $("#SurName").val('');
            $("#Password").val('');
            $("#Email").val('');

            $('#UserTitleID').select2();
            $('#UserRoleID').select2();
            $('#UserDepartmentID').select2();
            var gender = $("#Gender").val();
            var title = $("#UserTitleID").val();
            var dep = $("#UserDepartmentID").val();
            var role = $("#UserRoleID").val();
            if (gender != 0 && title != 0 && dep != 0 && role != 0) {
                $("button[name=save]").prop('disabled', false);
            }
            else {
                $("button[name=save]").prop('disabled', true);
            }

        });
        function dropValidation() {
            var gender = $("#Gender").val();
            var title = $("#UserTitleID").val();
            var dep = $("#UserDepartmentID").val();
            var role = $("#UserRoleID").val();

            if (gender != 0 && title != 0 && dep != 0 && role != 0) {
                $("button[name=save]").prop('disabled', false);
            }
            else {
                $("button[name=save]").prop('disabled', true);
            }
        }
    </script>
    <!--/ Custom Validation Scripts -->

    <script type="text/javascript">
        $("#MainUnitID").change(function () {
            var mainUnitID = $(this).val();
            $("#SubUnitID").empty();
            if (mainUnitID > 0) {
                $.ajax({
                    url: '/Department/GetSubUnit',
                    type: "GET",
                    dataType: "json",
                    data: { mainUnitID: mainUnitID },
                    success: function (data) {
                        if (data != null) {
                            $.each(data, function () {
                                $('#SubUnitID').append('<option value=' + this.SubUnitID + '>' + this.Name + '</option>');
                            });
                        } else {
                            $('#SubUnitID').append('<option value="0">Seçiniz</option>');
                        }
                    }
                });
            } else {
                $('#SubUnitID').append('<option value="0">Seçiniz</option>');
            }
        });
    </script>
    <!-- MainUnit Scripts -->
    <script type="text/javascript">
        function AddTitle() {
            var titleModal = $("#titleModal").val();
            $.ajax({
                url: '/User/AddUserTitle',
                type: "POST",
                dataType: "json",
                data: { name: titleModal },
                success: function (result) {
                    if (result.Result) {
                        location.reload();
                    } else {
                        $("#Messagetitle").html(result.ResultDescription);
                    }
                }
            });
        }
    </script>
    <!-- Department Scripts -->
    <script type="text/javascript">
        function AddDepartment() {
            var subUnitID = $("#SubUnitID").val();
            var name = $("#DepartmentName").val()
            $.ajax({
                url: '/User/AddDepartment',
                type: "POST",
                dataType: "json",
                data: { subUnitID: subUnitID, name: name },
                success: function (result) {
                    if (result.Result) {
                        location.reload();
                    } else {
                        $("#Messagedep").html(result.ResultDescription);
                    }
                }
            });
        }
    </script>

}